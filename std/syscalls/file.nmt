func syscall_read(fd @int, buf @ptr, size @u64) @ptr {
    asm {
        "mov rax, 0"
        "mov rdi, %fd"
        "mov rsi, %buf"
        "mov rdx, %size"
        "syscall"
    }
    return buf;
}

func syscall_write(fd @int, buf @ptr, size @u64) {
    var err @int = 0;
    asm {
        "mov rax, 1"
        "mov edi, %fd"
        "mov rsi, %buf"
        "mov rdx, %size"
        "syscall"
        "mov %err, eax"
    }
}


func syscall_open(filename @str, flags @int, mode @int) @u32 {
    var fd @u32 = 0;
    asm {
        "mov rax, 2"
        "mov rdi, %filename"
        "mov rsi, %flags"
        "mov rdx, %mode"
        "syscall"
        "mov %fd, rax"
    }
    return fd;
}

func syscall_close(fd @int) {
    asm {
        "mov rax, 3"
        "mov edi, %fd"
        "syscall"
    }
}

func syscall_rename(oldName @str, newName @string) {
    asm {
        "mov rax, 82"
        "mov rid, %oldName"
        "mov rsi, %newName"
        "syscall"
    }
}

func syscall_mkdir(pathName @str, mode @int) {
    asm {
        "mov rax, 83"
        "mov rid, %pathName"
        "mov rsi, %mode"
        "syscall"
    }
}

func syscall_rmdir(pathName @str) {
    asm {
        "mov rax, 84"
        "mov rid, %pathName"
        "syscall"
    }
}

func syscall_create(pathName @str, mode @int) {
    asm {
        "mov rax, 85"
        "mov rid, %pathName"
        "mov rsi, %mode"
        "syscall"
    }
}

func syscall_access(fileName @char, mode @int) {
    asm {
        "mov rax, 21"
        "mov rdi, %fileName"
        "mov rsi, %mode"
    }
}
